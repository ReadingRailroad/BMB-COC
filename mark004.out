
   Program  MARK  - Survival Rate Estimation with Capture-Recapture Data
   gfortran(dble) Vers. 9.0 Mar 2018     3-Oct-2019 15:49:36    Page  001
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 
   This version was compiled by GCC version 7.2.0 using the options: 
     -cpp -iprefix C:/Program Files/mingw-w64/x86_64-7.2.0-posix-seh-rt_v5-rev1/
     mingw64/bin/../lib/gcc/x86_64-w64-mingw32/7.2.0/ -D_MT -D_REENTRANT
     -U_REENTRANT -D IEEE -D DBLEPRECISION -m64 -mtune=core2 -march=nocona -mthreads
     -O2 -fimplicit-none -fbounds-check -funroll-loops -ftree-vectorize
     -ffpe-summary=invalid,zero,overflow,underflow -fno-unsafe-math-optimizations
     -frounding-math -fsignaling-nans -fopenmp.

   This problem will use 3 of 4 possible threads.


  INPUT --- proc title ;

   CPU Time for the last procedure was 0.01 seconds.     


  INPUT --- proc chmatrix occasions= 6 groups= 1 etype= Closed Nodes= 
  INPUT --- 101 ICMeans NoHist hist= 24  ;

  INPUT ---    time interval 1 1 1 1 1 ;

  INPUT ---    glabel(1)=Group 1;

      Number of unique encounter histories read was 24.

      Number of individual covariates read was 0.
      Time interval lengths are all equal to 1.

      Data type number is 5
      Data type is Full Likelihhood p and c                                                                            

   CPU Time for the last procedure was 0.01 seconds.     

  Program  MARK  - Survival Rate Estimation with Capture-Recapture Data
   gfortran(dble) Vers. 9.0 Mar 2018     3-Oct-2019 15:49:36    Page  002
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 


  INPUT --- proc estimate link=Parm-Specific NOLOOP varest=2ndPart    ;


  INPUT --- model={ p(~time)c()f0(~1) };

  INPUT ---    group=1 p    rows=1 cols=6 Square ;
  INPUT ---        1 2 3 4 5 6 ;

  INPUT ---    group=1 c    rows=1 cols=5 Square ;
  INPUT ---        2 3 4 5 6 ;

  INPUT ---    group=1 f0    rows=1 cols=1 Square ;
  INPUT ---        7 ;

  INPUT ---    design matrix constraints=7 covariates=7;
  INPUT ---        1 0 0 0 0 0 0;
  INPUT ---        1 1 0 0 0 0 0;
  INPUT ---        1 0 1 0 0 0 0;
  INPUT ---        1 0 0 1 0 0 0;
  INPUT ---        1 0 0 0 1 0 0;
  INPUT ---        1 0 0 0 0 1 0;
  INPUT ---        0 0 0 0 0 0 1;

  INPUT ---    links=7;

  INPUT ---    Logit;

  INPUT ---    Logit;

  INPUT ---    Logit;

  INPUT ---    Logit;

  INPUT ---    Logit;

  INPUT ---    Logit;

  INPUT ---    Log;
  INPUT ---       blabel(1)=p:(Intercept);
  INPUT ---       blabel(2)=p:time2;
  INPUT ---       blabel(3)=p:time3;
  INPUT ---       blabel(4)=p:time4;
  INPUT ---       blabel(5)=p:time5;
  INPUT ---       blabel(6)=p:time6;

  Program  MARK  - Survival Rate Estimation with Capture-Recapture Data
   gfortran(dble) Vers. 9.0 Mar 2018     3-Oct-2019 15:49:36    Page  003
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 
  INPUT ---       blabel(7)=f0:(Intercept);
  INPUT ---       rlabel(1)=p g1 t1;
  INPUT ---       rlabel(2)=p g1 t2;
  INPUT ---       rlabel(3)=p g1 t3;
  INPUT ---       rlabel(4)=p g1 t4;
  INPUT ---       rlabel(5)=p g1 t5;
  INPUT ---       rlabel(6)=p g1 t6;
  INPUT ---       rlabel(7)=f0 g1 a0 t1;

 Link Function Used is PARM-SPECIFIC

 Variance Estimation Procedure Used is 2ndPart 

 M(t+1):
      38


 -2logL(saturated) = 24.065739     
 Effective Sample Size = 228

 Number of function evaluations was 37 for 7 parameters.
 Time for numerical optimization was 0.02 seconds.     
 -2logL { p(~time)c()f0(~1) } = 99.674959     
 Penalty { p(~time)c()f0(~1) } = 0.0000000     
 Gradient { p(~time)c()f0(~1) }:
   0.000000       0.000000       0.000000       0.000000     -0.1832781E-05
  0.1832781E-05   0.000000    
 Maximum ABS(G) { p(~time)c()f0(~1) } = 0.1832781E-05 
 S Vector { p(~time)c()f0(~1) }:
   62.18575      9.487368      9.344933      8.868529      8.552632    
   1.323956     0.3564987E-08
 Time to compute number of parameters was 0.02 seconds.     
 Ratio Threshold = 50.000000       Max Gap (6/7) = 0.3713774E+09   Next Max Gap (1/2) = 6.5545841     
 Gap Method for Num. of Estimated Parameters { p(~time)c()f0(~1) } = 6          
 Threshold { p(~time)c()f0(~1) } = 0.3665563E-05                 
 Numerical Threshold Method for Num. of Estimated Parameters { p(~time)c()f0(~1) } = 6          
 Number of Estimated Parameters { p(~time)c()f0(~1) } = 6          
 DEVIANCE { p(~time)c()f0(~1) } = 75.609220                     
 DEVIANCE Degrees of Freedom { p(~time)c()f0(~1) } = 18            
 c-hat { p(~time)c()f0(~1) } = 4.2005122                     
 AIC { p(~time)c()f0(~1) } = 111.67496                  
 AICc { p(~time)c()f0(~1) } = 112.05505                    
 BIC { p(~time)c()f0(~1) } = 132.25103                    
 Pearson Chisquare { p(~time)c()f0(~1) } = 84.054504                  
 Possible Encounter Histories { p(~time)c()f0(~1) } = 63             
 Pearson Chisquare df { p(~time)c()f0(~1) } = 56        
 Pearson chat { p(~time)c()f0(~1) } = 1.5009733                  
 Sum(Observed/Expected) { p(~time)c()f0(~1) } = 61.798839                  
 Fletcher chat { p(~time)c()f0(~1) } = 1.5301471                  


                    PARM-SPECIFIC Link Function Parameters of { p(~time)c()f0(~1) }
                                                              95% Confidence Interval
 Parameter                    Beta         Standard Error      Lower           Upper
 -------------------------  --------------  --------------  --------------  --------------
    1:p:(Intercept)         -0.4274441       0.3318807      -1.0779303       0.2230420    
    2:p:time2                0.5328046       0.4644355      -0.3774889       1.4430981    
    3:p:time3                0.1089904       0.4670109      -0.8063509       1.0243318    
    4:p:time4                0.4274441       0.4641205      -0.4822321       1.3371204    
    5:p:time5                1.0813706       0.4765163       0.1473986       2.0153426    
    6:p:time6                1.0813706       0.4765163       0.1473986       2.0153426    
    7:f0:(Intercept)        -19.580564       16748.312      -32846.273       32807.112    

  Program  MARK  - Survival Rate Estimation with Capture-Recapture Data
   gfortran(dble) Vers. 9.0 Mar 2018     3-Oct-2019 15:49:37    Page  004
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 


                    Real Function Parameters of { p(~time)c()f0(~1) }
                                                               95% Confidence Interval
  Parameter                  Estimate       Standard Error      Lower           Upper
 --------------------------  --------------  --------------  --------------  --------------
     1:p g1 t1                0.3947368       0.0792928       0.2538979       0.5555305                          
     2:p g1 t2                0.5263158       0.0809983       0.3701834       0.6774660                          
     3:p g1 t3                0.4210526       0.0800932       0.2763900       0.5806719                          
     4:p g1 t4                0.5000000       0.0811107       0.3461721       0.6538278                          
     5:p g1 t5                0.6578947       0.0769602       0.4959310       0.7898679                          
     6:p g1 t6                0.6578947       0.0769602       0.4959310       0.7898679                          
     7:f0 g1 a0 t1            0.3135229E-08   0.5250979E-04   0.5520963E-12   0.1780425E-04                      


                     Estimates of Derived Parameters
              Population Estimates of { p(~time)c()f0(~1) }
                                                95% Confidence Interval
 Grp. Sess.     N-hat        Standard Error      Lower           Upper
 ---- -----  --------------  --------------  --------------  --------------
   1     1    38.000000       0.5250979E-04   38.000000       38.000018    

 Attempted ordering of parameters by estimatibility:
  1 4 2 3 5 6 7
 Beta number 7 is a singular value.

   CPU Time for the last procedure was 0.03 seconds.     

  Program  MARK  - Survival Rate Estimation with Capture-Recapture Data
   gfortran(dble) Vers. 9.0 Mar 2018     3-Oct-2019 15:49:37    Page  005
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 


  INPUT --- proc stop;

     CPU Time in minutes for this job was 0.00

     Time Start = 15:49:36.681   Time End = 15:49:37.128

     Wall Clock Time in minutes for this job was 0.01


          E X E C U T I O N   S U C C E S S F U L 
